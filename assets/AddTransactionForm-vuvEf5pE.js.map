{"version":3,"file":"AddTransactionForm-vuvEf5pE.js","sources":["../../src/options/selectStylesAdd.js","../../src/components/AddTransactionForm/AddTransactionForm.jsx"],"sourcesContent":["export const styles = {\n  control: () => ({}),\n  container: (baseStyles) => ({\n    ...baseStyles,\n    border: \"none\",\n    borderBottom: \"1px solid var(--white-40)\",\n    borderRadius: 0,\n    fontFamily: \"Poppins\",\n    fontWeight: 400,\n    fontSize: 18,\n    backgroundColor: \"transparent\",\n    color: 'red',\n  }),\n  dropdownIndicator: () => ({\n    display: \"none\",\n  }),\n  indicatorsContainer: () => ({\n    display: \"none\",\n  }),\n  singleValue: (baseStyles) => ({\n    ...baseStyles,\n    fontFamily: \"Poppins\",\n    fontWeight: 400,\n    fontSize: 16,\n    color: \"#fbfbfb\",\n  }),\n  input: (baseStyles) => ({\n    ...baseStyles,\n    caretColor: \"#fbfbfb\",\n    fontFamily: \"Poppins\",\n    fontWeight: 400,\n    fontSize: 16,\n    color: \"#fbfbfb\",\n  }),\n  valueContainer: (baseStyles) => ({\n    ...baseStyles,\n    padding: \"12px 20px\",\n  }),\n  menu: (baseStyles) => ({\n    ...baseStyles,\n    background:\n      \"linear-gradient(360deg, rgba(83, 61, 186, 0.7) 0%, rgba(80, 48, 154, 0.7) 35.94%, rgba(106, 70, 165, 0.7) 61.04%, rgba(133, 93, 175, 0.7) 100%);\",\n    backdropFilter: \"blur(100px)\",\n    boxShadow: \"0 4px 60px 0 rgba(0, 0, 0, 0.25)\",\n    borderRadius: 8,\n    cursor: \"pointer\",\n    overflow: \"hidden\",\n  }),\n  menuList: (baseStyles) => ({\n    ...baseStyles,\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: 158,\n    padding: 0,\n    \"::-webkit-scrollbar\": {\n      display: \"none\",\n    },\n  }),\n  option: (baseStyles, state) => ({\n    ...baseStyles,\n    backgroundColor: state.isFocused && \"rgba(255, 255, 255, 0.1)\",\n    color: state.isFocused ? \"#ff868d\" : \"#fbfbfb\",\n    cursor: \"pointer\",\n    padding: \"8px 20px\",\n    display: \"block\",\n    \":active\": {\n      backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n    },\n  }),\n};\n","import { useEffect, useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport ReactDatePicker from \"react-datepicker\";\nimport Select from \"react-select\";\nimport clsx from \"clsx\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport * as Yup from \"yup\";\n\nimport CustomInputCalendar from \"./CustomInputCalendar\";\nimport Modal from \"../Modal/Modal\";\nimport Toggle from \"../Toggle/Toggle\";\nimport { Icon } from \"../../images/Icon/Icon\";\n\nimport { selectCategories } from \"../../redux/transactions/selectors\";\nimport { postTransactionThunk } from \"../../redux/transactions/operations\";\nimport { styles } from \"../../options/selectStylesAdd\";\nimport useMedia from \"../../hooks/useMedia\";\n\nimport s from \"./AddTransactionForm.module.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst AddTransactionForm = ({ closeModal }) => {\n  const { isMobile } = useMedia();\n  const dispatch = useDispatch();\n  const categories = useSelector(selectCategories);\n\n  const [monthSelectIsOpen, setMonthSelectIsOpen] = useState(false);\n  const [transactionType, setTransactionType] = useState(false); // Initialize as false for Expense\n  const [defaultIncomeCategory, setDefaultIncomeCategory] = useState(null);\n\n  useEffect(() => {\n    if (categories.length > 0) {\n      const defaultCategory = categories.find(\n        (category) => category.type === \"INCOME\"\n      );\n      setDefaultIncomeCategory(defaultCategory ? defaultCategory.id : null);\n    }\n  }, [categories]);\n\n  const categoryOptions = categories\n    .filter(\n      (category) => category.type === (transactionType ? \"INCOME\" : \"EXPENSE\")\n    )\n    .map((category) => ({\n      value: category.id,\n      label: category.name,\n    }));\n\n  const handleMenuOpen = (id) => {\n    if (id === \"monthSelect\") setMonthSelectIsOpen(true);\n  };\n\n  const handleMenuClose = (id) => {\n    if (id === \"monthSelect\") setMonthSelectIsOpen(false);\n  };\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    const { amount, comment, startDate, selectedCategory } = values;\n\n    const newTransaction = {\n      transactionDate: startDate.toISOString(),\n      type: transactionType ? \"INCOME\" : \"EXPENSE\",\n      categoryId: transactionType\n        ? defaultIncomeCategory\n        : selectedCategory.value,\n      comment,\n      amount: transactionType ? parseFloat(amount) : -parseFloat(amount),\n    };\n\n    dispatch(postTransactionThunk(newTransaction))\n      .unwrap()\n      .then(() => closeModal())\n      .catch((error) => {\n        toast.error(error);\n        setSubmitting(false);\n      });\n  };\n\n  const validationSchema = Yup.object().shape({\n    amount: Yup.number()\n      .required(\"Amount is required\")\n      .positive(\"Amount must be positive\"),\n    startDate: Yup.date().required(\"Date is required\"),\n    selectedCategory: Yup.object().nullable(),\n    comment: Yup.string().required(\"Comment is required\"),\n  });\n\n  return (\n    <div>\n      <Toaster />\n      <Modal closeModal={closeModal}>\n        {!isMobile && (\n          <div onClick={closeModal}>\n            <Icon\n              id=\"icon-close\"\n              width={16}\n              height={16}\n              className={s.iconClose}\n            />\n          </div>\n        )}\n        <p className={s.title}>Add transaction</p>\n        <Toggle onChange={setTransactionType} defaultActive={false} />\n        <Formik\n          initialValues={{\n            startDate: new Date(),\n            amount: \"\",\n            comment: \"\",\n            selectedCategory: null,\n          }}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ setFieldValue, isSubmitting, values }) => (\n            <Form className={s.inputContainer}>\n              {!transactionType && (\n                <div className={s.select_wrapper}>\n                  <Select\n                    className={s.categorySelect}\n                    options={categoryOptions}\n                    placeholder=\"Select a category\"\n                    onMenuOpen={() => handleMenuOpen(\"monthSelect\")}\n                    onMenuClose={() => handleMenuClose(\"monthSelect\")}\n                    styles={styles}\n                    onChange={(option) =>\n                      setFieldValue(\"selectedCategory\", option)\n                    }\n                  />\n                  <Icon\n                    id=\"icon-down-arrow\"\n                    className={clsx(s.icon, {\n                      [s.is_active]: monthSelectIsOpen,\n                    })}\n                    width=\"23px\"\n                    height=\"18px\"\n                  />\n                </div>\n              )}\n              <div className={s.inputs}>\n                <Field\n                  type=\"number\"\n                  name=\"amount\"\n                  placeholder=\"0.00\"\n                  required\n                  className={s.inputField}\n                />\n\n                <div>\n                  <ReactDatePicker\n                    selected={values.startDate}\n                    onChange={(date) => setFieldValue(\"startDate\", date)}\n                    dateFormat=\"dd.MM.yyyy\"\n                    className={s.dateInput}\n                    maxDate={Date.now()}\n                    customInput={<CustomInputCalendar />}\n                  />\n                </div>\n              </div>\n              <ErrorMessage name=\"amount\" component=\"div\" className={s.error} />\n              <Field\n                type=\"text\"\n                name=\"comment\"\n                placeholder=\"Comment\"\n                className={s.commentInput}\n              />\n              <ErrorMessage\n                name=\"comment\"\n                component=\"div\"\n                className={s.error}\n              />\n\n              <button\n                type=\"submit\"\n                className={s.addButton}\n                aria-label=\"add button\"\n                disabled={isSubmitting}\n              >\n                ADD\n              </button>\n            </Form>\n          )}\n        </Formik>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddTransactionForm;\n"],"names":["styles","baseStyles","state","AddTransactionForm","closeModal","isMobile","useMedia","dispatch","useDispatch","categories","useSelector","selectCategories","monthSelectIsOpen","setMonthSelectIsOpen","useState","transactionType","setTransactionType","defaultIncomeCategory","setDefaultIncomeCategory","useEffect","defaultCategory","category","categoryOptions","handleMenuOpen","id","handleMenuClose","handleSubmit","values","setSubmitting","amount","comment","startDate","selectedCategory","newTransaction","postTransactionThunk","error","toast","validationSchema","Yup.object","Yup.number","Yup.date","Yup.string","jsx","Toaster","jsxs","Modal","Icon","s","Toggle","Formik","setFieldValue","isSubmitting","Form","Select","option","clsx","Field","ReactDatePicker","date","CustomInputCalendar","ErrorMessage","AddTransactionForm$1"],"mappings":"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"}